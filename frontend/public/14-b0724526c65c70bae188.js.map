{"version":3,"sources":["webpack:///./node_modules/property-information/lib/util/create.js","webpack:///./node_modules/property-information/lib/util/types.js","webpack:///./node_modules/property-information/lib/util/merge.js","webpack:///./node_modules/property-information/lib/util/schema.js","webpack:///./node_modules/property-information/lib/xlink.js","webpack:///./node_modules/property-information/normalize.js","webpack:///./node_modules/property-information/lib/util/defined-info.js","webpack:///./node_modules/property-information/lib/util/info.js","webpack:///./node_modules/property-information/lib/xml.js","webpack:///./node_modules/property-information/lib/xmlns.js","webpack:///./node_modules/property-information/lib/util/case-insensitive-transform.js","webpack:///./node_modules/property-information/lib/util/case-sensitive-transform.js","webpack:///./node_modules/property-information/lib/aria.js","webpack:///./node_modules/gatsby-custom-md/index.js","webpack:///./node_modules/rehype-react/index.js","webpack:///./node_modules/has/src/index.js","webpack:///./node_modules/function-bind/index.js","webpack:///./node_modules/function-bind/implementation.js","webpack:///./node_modules/hast-to-hyperscript/index.js","webpack:///./node_modules/property-information/html.js","webpack:///./node_modules/xtend/immutable.js","webpack:///./node_modules/property-information/lib/html.js","webpack:///./node_modules/property-information/svg.js","webpack:///./node_modules/property-information/lib/svg.js","webpack:///./node_modules/property-information/find.js","webpack:///./node_modules/space-separated-tokens/index.js","webpack:///./node_modules/comma-separated-tokens/index.js","webpack:///./node_modules/style-to-object/index.js","webpack:///./node_modules/inline-style-parser/index.js","webpack:///./node_modules/unist-util-is/index.js","webpack:///./node_modules/@mapbox/hast-util-table-cell-style/index.js","webpack:///./node_modules/unist-util-visit/index.js","webpack:///./node_modules/unist-util-visit-parents/index.js","webpack:///./node_modules/unist-util-visit-parents/node_modules/unist-util-is/convert.js"],"names":["normalize","__webpack_require__","Schema","DefinedInfo","module","exports","definition","prop","info","space","mustUseProperty","attributes","props","properties","transform","property","normal","indexOf","attribute","powers","increment","Math","pow","boolean","booleanish","overloadedBoolean","number","spaceSeparated","commaSeparated","commaOrSpaceSeparated","xtend","definitions","length","index","push","apply","proto","prototype","this","create","_","slice","toLowerCase","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","value","replace","Info","types","mask","mark","call","check","values","key","defined","xmlLang","xmlBase","xmlSpace","caseInsensitiveTransform","xmlnsxlink","xmlns","xmlnsXLink","caseSensitiveTransform","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","React","renderAst","createElement","Compiler","components","htmlAstOriginal","htmlAst","JSON","parse","stringify","mainStack","children","forEach","e","i","tagName","clen","ci","exec","split","lse","lsi","trim","type","splice","ec","ic","arr","ck","hasOwnProperty","c","pos","tag","sort","a","b","startStack","endStack","l","numOpeningFound","m","start","pop","end","undefined","p","s1","e1","s2","e2","cText","replaceTagEnd","replaceTagStart","substring","val","Object","keys","er","ir","pLen","trav","RtoHAST","node","obj","className","Children","toArray","has","toH","tableCellStyle","options","settings","h","name","component","prefix","bind","Function","implementation","Array","toStr","toString","that","target","TypeError","bound","args","arguments","boundLength","max","boundArgs","join","result","concat","Empty","html","svg","find","spaces","commas","style","ns","is","dashes","addAttribute","ctx","subprop","schema","hyperscript","vdom","react","Boolean","context","cleanup","styleReplacer","$0","$1","toUpperCase","r","v","Error","parentSchema","elements","styleCase","err","message","parseStyle","namespace","merge","xlink","xml","aria","source","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allowFullScreen","allowPaymentRequest","allowUserMedia","alt","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","checked","cite","cols","colSpan","content","contentEditable","controls","controlsList","coords","crossOrigin","data","dateTime","decoding","default","defer","dir","dirName","disabled","download","draggable","encType","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","href","hrefLang","htmlFor","httpEquiv","id","inputMode","integrity","isMap","itemId","itemProp","itemRef","itemScope","itemType","kind","label","lang","language","list","loop","low","manifest","maxLength","media","method","min","minLength","multiple","muted","nonce","noModule","noValidate","open","optimum","pattern","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rows","rowSpan","sandbox","scope","scoped","seamless","selected","shape","size","sizes","slot","span","spellCheck","src","srcDoc","srcLang","srcSet","step","tabIndex","title","translate","typeMustMatch","useMap","width","wrap","align","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","char","charOff","classId","clear","code","codeBase","codeType","color","compact","declare","event","face","frame","frameBorder","hSpace","leftMargin","link","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","rules","scheme","scrolling","standby","summary","text","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","results","security","unselectable","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","d","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","format","fr","from","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","handler","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","offset","opacity","operator","order","orient","orientation","origin","overflow","overlay","path","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","resource","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","string","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","Type","valid","test","charAt","dash","camelcase","datasetToProperty","cap","kebab","datasetToAttribute","input","String","empty","whiteSpace","comma","lastIndex","left","padLeft","right","padRight","iterator","declaration","output","declarations","hasIterator","len","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","NEWLINE","FORWARD_SLASH","ASTERISK","EMPTY_STRING","TYPE_COMMENT","TYPE_DECLARATION","str","lineno","column","updatePosition","lines","match","lastIndexOf","position","line","Position","whitespace","errorsList","error","msg","reason","filename","silent","re","comments","comment","ret","decl","decls","convert","typeFactory","ok","tests","checks","convertAll","parent","hasParent","hasIndex","Infinity","visit","hastCssPropertyMap","valign","visitor","hastName","appendStyle","prevStyle","nextStyle","visitParents","CONTINUE","SKIP","EXIT","tree","reverse","parents","one","subresult","toResult","all"],"mappings":"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ACAqmB,SAAA,KACAC,QAAA,KACAjb,OAAA,KACAkb,OAAA,KACAC,GAAA,KACAC,GAAA,KACAC,MAAA,KACAC,KAAA,KACApK,eAAA,KACAqK,KAAA,KACAC,MAAA,KACAC,aAAA,KACAC,iBAAAlnB,EACAmnB,iBAAAnnB,EACAonB,aAAA,KACAC,QAAA,KACAC,YAAA,KACAC,aAAA,KACAC,MAAA,KACAC,MAAA,KACAC,YAAA,KACA/K,UAAA,KACAC,YAAA,KACAC,sBAAA7c,EACA8c,uBAAA9c,EACA2nB,OAAA,KACAC,OAAA,KACA7K,gBAAA5c,EACA6c,iBAAA,KACAC,cAAA,KACAC,eAAA,KACAC,iBAAAnd,EACAod,cAAApd,EACAqd,YAAA,KACArR,MAAA,KACA6b,aAAA7nB,EACA8nB,aAAA,KACAC,oBAAA,KACAC,WAAA,KACAC,cAAA,KACAC,qBAAA,KACAC,eAAAhoB,EACAgV,SAAAnV,EACAooB,YAAA,KACArd,OAAA,KACAsd,QAAAroB,EACAsoB,QAAAtoB,EACAsd,WAAA,KACAC,eAAA,KACAC,cAAA,KACA+K,WAAA,KACA5J,cAAA,KACAvJ,MAAA,KACAoT,kBAAA,KACArhB,KAAA,KACAsW,OAAAtd,EACAsoB,GAAA,KACArpB,UAAA,KACAspB,GAAA,KACAC,GAAA,KACAjL,kBAAA1d,EACA2d,mBAAA3d,EACA4oB,QAAA,KACAhL,YAAA,KACAC,aAAA,KACAC,WAAA9d,EACAgC,OAAA,KACA+b,YAAA/d,EACAke,cAAAle,EACAme,aAAA,KACAH,SAAAhe,EACAie,aAAAje,EACA2Y,QAAA,KACAyF,SAAApe,EACAqe,YAAAre,EACAse,YAAAte,EACA6oB,QAAA,KACAC,WAAA,KACAC,WAAA,KACAvT,MAAA,KACAwT,OAAA,KACAzK,YAAA,KACAC,YAAA,KACAyK,EAAA,KACAC,GAAA,KACAC,GAAA,KACAC,iBAAA,KACA3K,QAAAze,EACAqpB,EAAA,KACAC,GAAA,KACAC,GAAA,KACAC,iBAAA,KACAC,EAAA,KACAC,WAAA,0CCjZA,IAAAprB,EAAgBC,EAAQ,KACxBE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","file":"14-b0724526c65c70bae188.js","sourcesContent":["'use strict'\n\nvar normalize = require('../../normalize')\nvar Schema = require('./schema')\nvar DefinedInfo = require('./defined-info')\n\nmodule.exports = create\n\nfunction create(definition) {\n  var space = definition.space\n  var mustUseProperty = definition.mustUseProperty || []\n  var attributes = definition.attributes || {}\n  var props = definition.properties\n  var transform = definition.transform\n  var property = {}\n  var normal = {}\n  var prop\n  var info\n\n  for (prop in props) {\n    info = new DefinedInfo(\n      prop,\n      transform(attributes, prop),\n      props[prop],\n      space\n    )\n\n    if (mustUseProperty.indexOf(prop) !== -1) {\n      info.mustUseProperty = true\n    }\n\n    property[prop] = info\n\n    normal[normalize(prop)] = prop\n    normal[normalize(info.attribute)] = prop\n  }\n\n  return new Schema(property, normal, space)\n}\n","'use strict'\n\nvar powers = 0\n\nexports.boolean = increment()\nexports.booleanish = increment()\nexports.overloadedBoolean = increment()\nexports.number = increment()\nexports.spaceSeparated = increment()\nexports.commaSeparated = increment()\nexports.commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return Math.pow(2, ++powers)\n}\n","'use strict'\n\nvar xtend = require('xtend')\nvar Schema = require('./schema')\n\nmodule.exports = merge\n\nfunction merge(definitions) {\n  var length = definitions.length\n  var property = []\n  var normal = []\n  var index = -1\n  var info\n  var space\n\n  while (++index < length) {\n    info = definitions[index]\n    property.push(info.property)\n    normal.push(info.normal)\n    space = info.space\n  }\n\n  return new Schema(\n    xtend.apply(null, property),\n    xtend.apply(null, normal),\n    space\n  )\n}\n","'use strict'\n\nmodule.exports = Schema\n\nvar proto = Schema.prototype\n\nproto.space = null\nproto.normal = {}\nproto.property = {}\n\nfunction Schema(property, normal, space) {\n  this.property = property\n  this.normal = normal\n\n  if (space) {\n    this.space = space\n  }\n}\n","'use strict'\n\nvar create = require('./util/create')\n\nmodule.exports = create({\n  space: 'xlink',\n  transform: xlinkTransform,\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n\nfunction xlinkTransform(_, prop) {\n  return 'xlink:' + prop.slice(5).toLowerCase()\n}\n","'use strict'\n\nmodule.exports = normalize\n\nfunction normalize(value) {\n  return value.toLowerCase().replace(/\\b[:-]\\b/g, '')\n}\n","'use strict'\n\nvar Info = require('./info')\nvar types = require('./types')\n\nmodule.exports = DefinedInfo\n\nDefinedInfo.prototype = new Info()\nDefinedInfo.prototype.defined = true\n\nfunction DefinedInfo(property, attribute, mask, space) {\n  mark(this, 'space', space)\n  Info.call(this, property, attribute)\n  mark(this, 'boolean', check(mask, types.boolean))\n  mark(this, 'booleanish', check(mask, types.booleanish))\n  mark(this, 'overloadedBoolean', check(mask, types.overloadedBoolean))\n  mark(this, 'number', check(mask, types.number))\n  mark(this, 'commaSeparated', check(mask, types.commaSeparated))\n  mark(this, 'spaceSeparated', check(mask, types.spaceSeparated))\n  mark(this, 'commaOrSpaceSeparated', check(mask, types.commaOrSpaceSeparated))\n}\n\nfunction mark(values, key, value) {\n  if (value) {\n    values[key] = value\n  }\n}\n\nfunction check(value, mask) {\n  return (value & mask) === mask\n}\n","'use strict'\n\nmodule.exports = Info\n\nvar proto = Info.prototype\n\nproto.space = null\nproto.attribute = null\nproto.property = null\nproto.boolean = false\nproto.booleanish = false\nproto.overloadedBoolean = false\nproto.number = false\nproto.commaSeparated = false\nproto.spaceSeparated = false\nproto.commaOrSpaceSeparated = false\nproto.mustUseProperty = false\nproto.defined = false\n\nfunction Info(property, attribute) {\n  this.property = property\n  this.attribute = attribute\n}\n","'use strict'\n\nvar create = require('./util/create')\n\nmodule.exports = create({\n  space: 'xml',\n  transform: xmlTransform,\n  properties: {\n    xmlLang: null,\n    xmlBase: null,\n    xmlSpace: null\n  }\n})\n\nfunction xmlTransform(_, prop) {\n  return 'xml:' + prop.slice(3).toLowerCase()\n}\n","'use strict'\n\nvar create = require('./util/create')\nvar caseInsensitiveTransform = require('./util/case-insensitive-transform')\n\nmodule.exports = create({\n  space: 'xmlns',\n  attributes: {\n    xmlnsxlink: 'xmlns:xlink'\n  },\n  transform: caseInsensitiveTransform,\n  properties: {\n    xmlns: null,\n    xmlnsXLink: null\n  }\n})\n","'use strict'\n\nvar caseSensitiveTransform = require('./case-sensitive-transform')\n\nmodule.exports = caseInsensitiveTransform\n\nfunction caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","'use strict'\n\nmodule.exports = caseSensitiveTransform\n\nfunction caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","'use strict'\n\nvar types = require('./util/types')\nvar create = require('./util/create')\n\nvar booleanish = types.booleanish\nvar number = types.number\nvar spaceSeparated = types.spaceSeparated\n\nmodule.exports = create({\n  transform: ariaTransform,\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n\nfunction ariaTransform(_, prop) {\n  return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n}\n","/* This plugin was created for a personal project and then converted to a general purpose plugin.\r\nI've been out of the loop for some time, so my knowledge of latest JS is somewhat limited.\r\nThe below program could be shortened using better javascript.\r\n\r\nKeep this in mind before reading.\r\nTake a deep breath, for what you're about to witness is the strength of street knowledge :) */\r\n\r\nconst React = require(\"react\");\r\nconst rehypeReact = require(\"rehype-react\");\r\n\r\nconst renderAst = new rehypeReact({createElement: React.createElement}).Compiler\r\n\r\n/**\r\n * The main function\r\n * @param {Object} props\r\n*/\r\n\r\nmodule.exports = function(props) {\r\n\t/*\r\n\tSo the Idea is to scan the HAST for starting and ending tags, then the data between those tags are passed as children to the given react component.\r\n\tThe react component is then converted to HAST form.\r\n\t*/\r\n\r\n\tconst components = props.components;\r\n\tconst htmlAstOriginal = props.htmlAst;\r\n\tlet htmlAst = JSON.parse(JSON.stringify(htmlAstOriginal)); // This is to copy the given object.\r\n\r\n\tlet mainStack = []; // Stack that stores the position of opening and closing tags\r\n\r\n\t// Seperate each line into a new object.\r\n\thtmlAst.children.forEach(function(e, i) {\r\n\t\tif (e.tagName === \"p\") {\r\n\t\t\tlet clen = e.children.length;\r\n\t\t\tlet ci = 0;\r\n\r\n\t\t\twhile (ci < clen) {\r\n\t\t\t\tlet value = e.children[ci].value;\r\n\t\t\t\tif (typeof(value) !== \"string\")\r\n\t\t\t\t\treturn;\r\n\t\t\t\tif (!/(\\r\\n|\\n|\\r)/gm.exec(value))\r\n\t\t\t\t\treturn;\r\n\t\t\t\tlet lineSepreated = value.split(/(\\r\\n|\\n|\\r)/gm);\r\n\t\t\t\tlineSepreated.forEach(function(lse, lsi) {\r\n\t\t\t\t\tif (lse.trim().length > 0) {\r\n\t\t\t\t\t\tif (lsi === 0) {\r\n\t\t\t\t\t\t\thtmlAst.children[i].children[ci] = {\r\n\t\t\t\t\t\t\t\ttype: \"text\",\r\n\t\t\t\t\t\t\t\tvalue: lse\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\thtmlAst.children[i].children.splice((ci + lsi), 0, {\r\n\t\t\t\t\t\t\t\ttype: \"text\",\r\n\t\t\t\t\t\t\t\tvalue: lse\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tclen = e.children.length;\r\n\t\t\t\t\t\tci++;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\r\n\t// Scan for starting end ending tags, they are in the form [component-name] and [/component-name] respectively.\r\n\r\n\thtmlAst.children.forEach(function(e, i) {\r\n\t\tif (e.tagName === \"p\") {\r\n\t\t\te.children.forEach(function(ec, ic) {\r\n\t\t\t\tlet arr = [];\r\n\t\t\t\tlet value = ec.value;\r\n\r\n\t\t\t\tif (typeof(value) !== \"string\")\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\tfor (let ck in components) {\r\n\t\t\t\t\tif (components.hasOwnProperty(ck)) {\r\n\r\n\t\t\t\t\t\t// If a starting tag is found, it's index is recorded. Same for closing tags.\r\n\r\n\t\t\t\t\t\tif (value.indexOf(`[${ck}]`) !== -1) {\r\n\t\t\t\t\t\t\tarr.push({\r\n\t\t\t\t\t\t\t\tc: ck,\r\n\t\t\t\t\t\t\t\ttype: \"open\",\r\n\t\t\t\t\t\t\t\tpos: [\r\n\t\t\t\t\t\t\t\t\ti,\r\n\t\t\t\t\t\t\t\t\tic,\r\n\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\tvalue.indexOf(`[${ck}]`),\r\n\t\t\t\t\t\t\t\t\t\t`[${ck}]`.length\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\ttag: `[${ck}]`\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (value.indexOf(`[/${ck}]`) !== -1) {\r\n\t\t\t\t\t\t\tarr.push({\r\n\t\t\t\t\t\t\t\tc: ck,\r\n\t\t\t\t\t\t\t\ttype: \"close\",\r\n\t\t\t\t\t\t\t\tpos: [\r\n\t\t\t\t\t\t\t\t\ti,\r\n\t\t\t\t\t\t\t\t\tic,\r\n\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\tvalue.indexOf(`[/${ck}]`),\r\n\t\t\t\t\t\t\t\t\t\t`[${ck}]`.length\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\ttag: `[/${ck}]`\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/* Sorting required because the components are scanned in the order that is provided by the user,\r\n\t\t\t\t\tFor example, if `col`,`row` are given as components, and `col` is a child of `row`, then `col` is scanned first, even though row should be first, therefore the array is sorted based on the index they appear.\r\n\t\t\t\t*/\r\n\r\n\t\t\t\tarr.sort(function(a, b) {\r\n\t\t\t\t\treturn a.pos[2][0] == b.pos[2][0]\r\n\t\t\t\t\t\t? 0\r\n\t\t\t\t\t\t: + (a.pos[2][0] > b.pos[2][0]) || -1;\r\n\t\t\t\t})\r\n\r\n\t\t\t\tmainStack.push(...arr);\r\n\r\n\t\t\t})\r\n\t\t}\r\n\t})\r\n\r\n\tlet startStack = [];\r\n\tlet endStack = [];\r\n\r\n\t/*\r\n\tProperly match the ending tags to the starting tags.\r\n\t*/\r\n\r\n\tfor (let l = 0; l < mainStack.length; l++) {\r\n\t\tlet numOpeningFound = 0;\r\n\t\tif (mainStack[l].type === \"close\")\r\n\t\t\tcontinue;\r\n\t\tfor (let m = l + 1; m < mainStack.length; m++) {\r\n\t\t\tif (mainStack[m].tag === mainStack[l].tag) {\r\n\t\t\t\tnumOpeningFound += 1;\r\n\t\t\t} else {\r\n\t\t\t\tif (mainStack[m].c === mainStack[l].c) {\r\n\t\t\t\t\tnumOpeningFound -= 1;\r\n\r\n\t\t\t\t\tif (numOpeningFound === -1) {\r\n\t\t\t\t\t\tstartStack.push(mainStack[l]);\r\n\t\t\t\t\t\tendStack.push(mainStack[m]);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tlet start = startStack.pop();\r\n\r\n\tlet end = endStack.pop();\r\n\r\n\t// Pop all the items of startStack until there are none.\r\n\r\n\twhile (start != undefined) {\r\n\r\n\t\tlet p = [];\r\n\r\n\t\tlet s1 = start.pos[0];\r\n\t\tlet e1 = end.pos[0];\r\n\r\n\t\t/*\r\n\r\n\t\tThe below loops will search the HAST and extract the data between the starting and ending tags.\r\n\r\n\t\t*/\r\n\r\n\t\tfor (let l = s1; l <= e1; l++) {\r\n\t\t\t// Find the value of the next starting point. ie child Object index\r\n\t\t\tlet s2 = l === s1\r\n\t\t\t\t? start.pos[1]\r\n\t\t\t\t: 0;\r\n\r\n\t\t\t// Checking for text oe empty lines. They are kept as they are.\r\n\t\t\tif (htmlAst.children[l] && htmlAst.children[l].children == undefined) {\r\n\t\t\t\tp.push(htmlAst.children[l]);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tlet e2 = l === e1\r\n\t\t\t\t? end.pos[1]\r\n\t\t\t\t: htmlAst.children[l].children.length - 1;\r\n\r\n\r\n\t\t\tfor (let m = s2; m <= e2; m++) {\r\n\r\n\t\t\t\tif (l === s1 && m === s2 && l === e1 & m === e2) {\r\n\t\t\t\t\tlet cText = htmlAst.children[l].children[m].value;\r\n\t\t\t\t\tif (htmlAst.children[l].children[m].replaceTagEnd == undefined) {\r\n\t\t\t\t\t\thtmlAst.children[l].children[m].replaceTagEnd = [];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\thtmlAst.children[l].children[m].replaceTagEnd.push(end.c);\r\n\r\n\t\t\t\t\tif (htmlAst.children[l].children[m].replaceTagStart == undefined) {\r\n\t\t\t\t\t\thtmlAst.children[l].children[m].replaceTagStart = [];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\thtmlAst.children[l].children[m].replaceTagStart.push(start.c);\r\n\r\n\t\t\t\t\tp.push({\r\n\t\t\t\t\t\ttype: \"text\",\r\n\t\t\t\t\t\tvalue: cText.substring(cText.indexOf(start.tag), cText.indexOf(end.tag) + end.tag.length),\r\n\t\t\t\t\t\treplaceTagEnd: htmlAst.children[l].children[m].replaceTagEnd,\r\n\t\t\t\t\t\treplaceTagStart: htmlAst.children[l].children[m].replaceTagStart\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t\thtmlAst.children[l].children[m].value = cText.replace(cText.substring(cText.indexOf(start.tag), cText.indexOf(end.tag) + end.tag.length), \"\");\r\n\r\n\t\t\t\t} else if (l === s1 && m === s2) {\r\n\r\n\t\t\t\t\tlet cText = htmlAst.children[l].children[m].value;\r\n\t\t\t\t\tif (htmlAst.children[l].children[m].replaceTagStart == undefined) {\r\n\t\t\t\t\t\thtmlAst.children[l].children[m].replaceTagStart = [];\r\n\t\t\t\t\t}\r\n\t\t\t\t\thtmlAst.children[l].children[m].replaceTagStart.push(start.c);\r\n\r\n\t\t\t\t\tlet val = cText.substring(cText.indexOf(start.tag), cText.length);\r\n\r\n\t\t\t\t\tp.push({type: \"text\", value: val, replaceTagStart: htmlAst.children[l].children[m].replaceTagStart})\r\n\r\n\t\t\t\t\thtmlAst.children[l].children[m].value = cText.replace(val, \"\")\r\n\r\n\t\t\t\t} else if (l === e1 && m === e2) {\r\n\r\n\t\t\t\t\tif (Object.keys(htmlAst.children[l].children[m]).length === 0)\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\tlet cText = htmlAst.children[l].children[m].value;\r\n\r\n\t\t\t\t\tif (htmlAst.children[l].children[m].replaceTagEnd == undefined) {\r\n\t\t\t\t\t\thtmlAst.children[l].children[m].replaceTagEnd = [];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\thtmlAst.children[l].children[m].replaceTagEnd.push(end.c)\r\n\r\n\t\t\t\t\tp.push({\r\n\t\t\t\t\t\ttype: \"text\",\r\n\t\t\t\t\t\tvalue: cText.substring(0, cText.indexOf(end.tag) + end.tag.length),\r\n\t\t\t\t\t\treplaceTagEnd: htmlAst.children[l].children[m].replaceTagEnd\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t\thtmlAst.children[l].children[m].value = cText.replace(cText.substring(0, cText.indexOf(end.tag) + end.tag.length), \"\")\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// Plain text is displayed as a paragraph element.\r\n\r\n\t\t\t\t\tif (htmlAst.children[l].children[m].type === \"text\" && htmlAst.children[l].children[m].value.trim().length !== 0) {\r\n\t\t\t\t\t\thtmlAst.children[l].children[m].type = \"element\"\r\n\t\t\t\t\t\thtmlAst.children[l].children[m].tagName = \"p\"\r\n\t\t\t\t\t\thtmlAst.children[l].children[m].children = [];\r\n\t\t\t\t\t\thtmlAst.children[l].children[m].children.push({type: \"text\", value: htmlAst.children[l].children[m].value})\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tp.push(htmlAst.children[l].children[m])\r\n\t\t\t\t\thtmlAst.children[l].children[m] = {};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Remove the starting and ending tags.\r\n\r\n\t\tp.forEach(function(e, i) {\r\n\t\t\tif (!e)\r\n\t\t\t\treturn;\r\n\t\t\tif (e.replaceTagStart) {\r\n\t\t\t\te.replaceTagStart.forEach(function(er, ir) {\r\n\t\t\t\t\tp[i].value = e.value.replace(`[${er}]`, \"\");\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tif (e.replaceTagEnd) {\r\n\t\t\t\te.replaceTagEnd.forEach(function(er, ir) {\r\n\t\t\t\t\tp[i].value = e.value.replace(`[/${er}]`, \"\");\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tlet pLen = p.length - 1;\r\n\r\n\t\t// Remove empty objects\r\n\r\n\t\twhile (pLen >= 0) {\r\n\t\t\tif (!p[pLen]) {\r\n\t\t\t\tpLen--;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (Object.keys(p[pLen]).length == 0) {\r\n\t\t\t\tp.splice(pLen, 1);\r\n\t\t\t}\r\n\t\t\tpLen--;\r\n\t\t}\r\n\r\n\t\t// Execute the react component with the data as children.\r\n\r\n\t\tlet t = components[start.c]({\r\n\t\t\tchildren: {\r\n\t\t\t\ttype: \"child\",\r\n\t\t\t\tp\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Traverse the React Tree and convert it into HAST\r\n\t\tlet trav = RtoHAST(t);\r\n\r\n\t\t// Add the tree to the original.\r\n\t\tif (htmlAst.children[start.pos[0]].children[start.pos[1] + 1] == undefined) {\r\n\t\t\thtmlAst.children[start.pos[0]].children.splice(start.pos[1] + 1, 0, trav[0]);\r\n\t\t} else {\r\n\t\t\thtmlAst.children[start.pos[0]].children[start.pos[1] + 1] = trav[0];\r\n\t\t}\r\n\r\n\t\t// Change the parent element to div\r\n\r\n\t\thtmlAst.children[start.pos[0]].tagName = \"div\";\r\n\r\n\t\tstart = startStack.pop();\r\n\t\tend = endStack.pop();\r\n\t}\r\n\r\n\t/**\r\n\t* Converts React tree to HAST\r\n\t* @param {Object} node - React Tree\r\n\t* @param {arr} array - It is used to store data during recursion, not required while calling the function.\r\n\t*/\r\n\tfunction RtoHAST(node, arr) {\r\n\t\tif (typeof(node) === \"string\") {\r\n\t\t\tlet obj = {\r\n\t\t\t\ttype: \"text\",\r\n\t\t\t\tvalue: node\r\n\t\t\t}\r\n\t\t\tarr.push(obj);\r\n\t\t\treturn arr;\r\n\t\t}\r\n\r\n\t\tif (!node.props)\r\n\t\t\treturn false;\r\n\r\n\t\tif (arr == undefined)\r\n\t\t\tarr = [];\r\n\r\n\t\tlet obj = {\r\n\t\t\ttype: \"element\",\r\n\t\t\ttagName: node.type,\r\n\t\t\tproperties: {},\r\n\t\t\tchildren: []\r\n\t\t}\r\n\r\n\t\tif (node.props.className) {\r\n\t\t\tobj.properties.className = node.props.className.split(\" \");\r\n\t\t}\r\n\r\n\t\tif (node.props.children && node.props.children.type === \"child\") {\r\n\t\t\tobj.children = node.props.children.p;\r\n\t\t\tarr.push(obj)\r\n\t\t} else {\r\n\r\n\t\t\tarr.push(obj)\r\n\t\t\tvar children = React.Children.toArray(node.props.children);\r\n\t\t\tchildren.forEach(function(e, i) {\r\n\t\t\t\tRtoHAST(e, obj.children);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\treturn arr;\r\n\t}\r\n\r\n\treturn (renderAst(htmlAst))\r\n\r\n}\r\n","'use strict';\n\n/* Dependencies. */\nvar has = require('has');\nvar toH = require('hast-to-hyperscript');\nvar tableCellStyle = require('@mapbox/hast-util-table-cell-style');\n\n/* Expose `rehype-react`. */\nmodule.exports = rehype2react;\n\n/**\n * Attach a react compiler.\n *\n * @param {Unified} processor - Instance.\n * @param {Object?} [options]\n * @param {Object?} [options.components]\n *   - Components.\n * @param {string?} [options.prefix]\n *   - Key prefix.\n * @param {Function?} [options.createElement]\n *   - `h()`.\n */\nfunction rehype2react(options) {\n  var settings = options || {};\n  var createElement = settings.createElement;\n  var components = settings.components || {};\n\n  this.Compiler = compiler;\n\n  /* Compile HAST to React. */\n  function compiler(node) {\n    if (node.type === 'root') {\n      if (node.children.length === 1 && node.children[0].type === 'element') {\n        node = node.children[0];\n      } else {\n        node = {\n          type: 'element',\n          tagName: 'div',\n          properties: node.properties || {},\n          children: node.children\n        };\n      }\n    }\n\n    return toH(h, tableCellStyle(node), settings.prefix);\n  }\n\n  /* Wrap `createElement` to pass components in. */\n  function h(name, props, children) {\n    var component = has(components, name) ? components[name] : name;\n    return createElement(component, props, children);\n  }\n}\n","'use strict';\n\nvar bind = require('function-bind');\n\nmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n","'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar slice = Array.prototype.slice;\nvar toStr = Object.prototype.toString;\nvar funcType = '[object Function]';\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slice.call(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                args.concat(slice.call(arguments))\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        } else {\n            return target.apply(\n                that,\n                args.concat(slice.call(arguments))\n            );\n        }\n    };\n\n    var boundLength = Math.max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs.push('$' + i);\n    }\n\n    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n","'use strict'\n\nvar html = require('property-information/html')\nvar svg = require('property-information/svg')\nvar find = require('property-information/find')\nvar spaces = require('space-separated-tokens')\nvar commas = require('comma-separated-tokens')\nvar style = require('style-to-object')\nvar ns = require('web-namespaces')\nvar is = require('unist-util-is')\n\nvar dashes = /-([a-z])/g\n\nmodule.exports = wrapper\n\nfunction wrapper(h, node, options) {\n  var settings = options || {}\n  var prefix\n  var r\n  var v\n\n  if (typeof h !== 'function') {\n    throw new Error('h is not a function')\n  }\n\n  if (typeof settings === 'string' || typeof settings === 'boolean') {\n    prefix = settings\n    settings = {}\n  } else {\n    prefix = settings.prefix\n  }\n\n  r = react(h)\n  v = vdom(h)\n\n  if (prefix === null || prefix === undefined) {\n    prefix = r === true || v === true ? 'h-' : false\n  }\n\n  if (is('root', node)) {\n    if (node.children.length === 1 && is('element', node.children[0])) {\n      node = node.children[0]\n    } else {\n      node = {\n        type: 'element',\n        tagName: 'div',\n        properties: {},\n        children: node.children\n      }\n    }\n  } else if (!is('element', node)) {\n    throw new Error(\n      'Expected root or element, not `' + ((node && node.type) || node) + '`'\n    )\n  }\n\n  return toH(h, node, {\n    schema: settings.space === 'svg' ? svg : html,\n    prefix: prefix,\n    key: 0,\n    react: r,\n    vdom: v,\n    hyperscript: hyperscript(h)\n  })\n}\n\n// Transform a HAST node through a hyperscript interface\n// to *anything*!\nfunction toH(h, node, ctx) {\n  var parentSchema = ctx.schema\n  var schema = parentSchema\n  var name = node.tagName\n  var properties\n  var attributes\n  var children\n  var property\n  var elements\n  var length\n  var index\n  var value\n  var result\n\n  if (parentSchema.space === 'html' && name.toLowerCase() === 'svg') {\n    schema = svg\n    ctx.schema = schema\n  }\n\n  if (ctx.vdom === true && schema.space === 'html') {\n    name = name.toUpperCase()\n  }\n\n  properties = node.properties\n  attributes = {}\n\n  for (property in properties) {\n    addAttribute(attributes, property, properties[property], ctx)\n  }\n\n  if (\n    typeof attributes.style === 'string' &&\n    (ctx.vdom === true || ctx.react === true)\n  ) {\n    // VDOM and React accept `style` as object.\n    attributes.style = parseStyle(attributes.style, name)\n  }\n\n  if (ctx.prefix) {\n    ctx.key++\n    attributes.key = ctx.prefix + ctx.key\n  }\n\n  if (ctx.vdom && schema.space !== 'html') {\n    attributes.namespace = ns[schema.space]\n  }\n\n  elements = []\n  children = node.children\n  length = children ? children.length : 0\n  index = -1\n\n  while (++index < length) {\n    value = children[index]\n\n    if (is('element', value)) {\n      elements.push(toH(h, value, ctx))\n    } else if (is('text', value)) {\n      elements.push(value.value)\n    }\n  }\n\n  // Ensure no React warnings are triggered for\n  // void elements having children passed in.\n  result =\n    elements.length === 0 ? h(name, attributes) : h(name, attributes, elements)\n\n  // Restore parent schema.\n  ctx.schema = parentSchema\n\n  return result\n}\n\nfunction addAttribute(props, prop, value, ctx) {\n  var schema = ctx.schema\n  var info = find(schema, prop)\n  var subprop\n\n  // Ignore nully, `false`, `NaN`, and falsey known booleans.\n  if (\n    value === null ||\n    value === undefined ||\n    value === false ||\n    value !== value ||\n    (info.boolean && !value)\n  ) {\n    return\n  }\n\n  if (value !== null && typeof value === 'object' && 'length' in value) {\n    // Accept `array`.  Most props are space-separater.\n    value = (info.commaSeparated ? commas : spaces).stringify(value)\n  }\n\n  // Treat `true` and truthy known booleans.\n  if (info.boolean && ctx.hyperscript === true) {\n    value = ''\n  }\n\n  if (!info.mustUseProperty) {\n    if (ctx.vdom === true) {\n      subprop = 'attributes'\n    } else if (ctx.hyperscript === true) {\n      subprop = 'attrs'\n    }\n  }\n\n  if (subprop) {\n    if (props[subprop] === undefined) {\n      props[subprop] = {}\n    }\n\n    props[subprop][info.attribute] = value\n  } else {\n    props[ctx.react && info.space ? info.property : info.attribute] = value\n  }\n}\n\n// Check if `h` is `react.createElement`.\nfunction react(h) {\n  var node = h && h('div')\n  return Boolean(\n    node && ('_owner' in node || '_store' in node) && node.key === null\n  )\n}\n\n// Check if `h` is `hyperscript`.\nfunction hyperscript(h) {\n  return Boolean(h && h.context && h.cleanup)\n}\n\n// Check if `h` is `virtual-dom/h`.\nfunction vdom(h) {\n  return h && h('div').type === 'VirtualNode'\n}\n\nfunction parseStyle(value, tagName) {\n  var result = {}\n\n  try {\n    style(value, iterator)\n  } catch (err) {\n    err.message = tagName + '[style]' + err.message.slice('undefined'.length)\n    throw err\n  }\n\n  return result\n\n  function iterator(name, value) {\n    result[styleCase(name)] = value\n  }\n}\n\nfunction styleCase(val) {\n  if (val.slice(0, 4) === '-ms-') {\n    val = 'ms-' + val.slice(4)\n  }\n\n  return val.replace(dashes, styleReplacer)\n}\n\nfunction styleReplacer($0, $1) {\n  return $1.toUpperCase()\n}\n","'use strict'\n\nvar merge = require('./lib/util/merge')\nvar xlink = require('./lib/xlink')\nvar xml = require('./lib/xml')\nvar xmlns = require('./lib/xmlns')\nvar aria = require('./lib/aria')\nvar html = require('./lib/html')\n\nmodule.exports = merge([xml, xlink, xmlns, aria, html])\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","'use strict'\n\nvar types = require('./util/types')\nvar create = require('./util/create')\nvar caseInsensitiveTransform = require('./util/case-insensitive-transform')\n\nvar boolean = types.boolean\nvar overloadedBoolean = types.overloadedBoolean\nvar booleanish = types.booleanish\nvar number = types.number\nvar spaceSeparated = types.spaceSeparated\nvar commaSeparated = types.commaSeparated\n\nmodule.exports = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: spaceSeparated,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: commaSeparated,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","'use strict'\n\nvar merge = require('./lib/util/merge')\nvar xlink = require('./lib/xlink')\nvar xml = require('./lib/xml')\nvar xmlns = require('./lib/xmlns')\nvar aria = require('./lib/aria')\nvar svg = require('./lib/svg')\n\nmodule.exports = merge([xml, xlink, xmlns, aria, svg])\n","'use strict'\n\nvar types = require('./util/types')\nvar create = require('./util/create')\nvar caseSensitiveTransform = require('./util/case-sensitive-transform')\n\nvar boolean = types.boolean\nvar number = types.number\nvar spaceSeparated = types.spaceSeparated\nvar commaSeparated = types.commaSeparated\nvar commaOrSpaceSeparated = types.commaOrSpaceSeparated\n\nmodule.exports = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","'use strict'\n\nvar normalize = require('./normalize')\nvar DefinedInfo = require('./lib/util/defined-info')\nvar Info = require('./lib/util/info')\n\nvar data = 'data'\n\nmodule.exports = find\n\nvar valid = /^data[-a-z0-9.:_]+$/i\nvar dash = /-[a-z]/g\nvar cap = /[A-Z]/g\n\nfunction find(schema, value) {\n  var normal = normalize(value)\n  var prop = value\n  var Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === data && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      prop = datasetToProperty(value)\n    } else {\n      value = datasetToAttribute(value)\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\nfunction datasetToProperty(attribute) {\n  var value = attribute.slice(5).replace(dash, camelcase)\n  return data + value.charAt(0).toUpperCase() + value.slice(1)\n}\n\nfunction datasetToAttribute(property) {\n  var value = property.slice(4)\n\n  if (dash.test(value)) {\n    return property\n  }\n\n  value = value.replace(cap, kebab)\n\n  if (value.charAt(0) !== '-') {\n    value = '-' + value\n  }\n\n  return data + value\n}\n\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","'use strict'\n\nexports.parse = parse\nexports.stringify = stringify\n\nvar empty = ''\nvar space = ' '\nvar whiteSpace = /[ \\t\\n\\r\\f]+/g\n\nfunction parse(value) {\n  var input = String(value || empty).trim()\n  return input === empty ? [] : input.split(whiteSpace)\n}\n\nfunction stringify(values) {\n  return values.join(space).trim()\n}\n","'use strict'\n\nexports.parse = parse\nexports.stringify = stringify\n\nvar comma = ','\nvar space = ' '\nvar empty = ''\n\n// Parse comma-separated tokens to an array.\nfunction parse(value) {\n  var values = []\n  var input = String(value || empty)\n  var index = input.indexOf(comma)\n  var lastIndex = 0\n  var end = false\n  var val\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    val = input.slice(lastIndex, index).trim()\n\n    if (val || !end) {\n      values.push(val)\n    }\n\n    lastIndex = index + 1\n    index = input.indexOf(comma, lastIndex)\n  }\n\n  return values\n}\n\n// Compile an array to comma-separated tokens.\n// `options.padLeft` (default: `true`) pads a space left of each token, and\n// `options.padRight` (default: `false`) pads a space to the right of each token.\nfunction stringify(values, options) {\n  var settings = options || {}\n  var left = settings.padLeft === false ? empty : space\n  var right = settings.padRight ? space : empty\n\n  // Ensure the last empty entry is seen.\n  if (values[values.length - 1] === empty) {\n    values = values.concat(empty)\n  }\n\n  return values.join(right + comma + left).trim()\n}\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","'use strict'\n\nmodule.exports = is\n\n// Assert if `test` passes for `node`.   When a `parent` node is known the\n// `index` of node.\n// eslint-disable-next-line max-params\nfunction is(test, node, index, parent, context) {\n  var hasParent = parent !== null && parent !== undefined\n  var hasIndex = index !== null && index !== undefined\n  var check = convert(test)\n\n  if (\n    hasIndex &&\n    (typeof index !== 'number' || index < 0 || index === Infinity)\n  ) {\n    throw new Error('Expected positive finite index or child node')\n  }\n\n  if (hasParent && (!is(null, parent) || !parent.children)) {\n    throw new Error('Expected parent node')\n  }\n\n  if (!node || !node.type || typeof node.type !== 'string') {\n    return false\n  }\n\n  if (hasParent !== hasIndex) {\n    throw new Error('Expected both parent and index')\n  }\n\n  return Boolean(check.call(context, node, index, parent))\n}\n\nfunction convert(test) {\n  if (typeof test === 'string') {\n    return typeFactory(test)\n  }\n\n  if (test === null || test === undefined) {\n    return ok\n  }\n\n  if (typeof test === 'object') {\n    return ('length' in test ? anyFactory : matchesFactory)(test)\n  }\n\n  if (typeof test === 'function') {\n    return test\n  }\n\n  throw new Error('Expected function, string, or object as test')\n}\n\nfunction convertAll(tests) {\n  var results = []\n  var length = tests.length\n  var index = -1\n\n  while (++index < length) {\n    results[index] = convert(tests[index])\n  }\n\n  return results\n}\n\n// Utility assert each property in `test` is represented in `node`, and each\n// values are strictly equal.\nfunction matchesFactory(test) {\n  return matches\n\n  function matches(node) {\n    var key\n\n    for (key in test) {\n      if (node[key] !== test[key]) {\n        return false\n      }\n    }\n\n    return true\n  }\n}\n\nfunction anyFactory(tests) {\n  var checks = convertAll(tests)\n  var length = checks.length\n\n  return matches\n\n  function matches() {\n    var index = -1\n\n    while (++index < length) {\n      if (checks[index].apply(this, arguments)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n// Utility to convert a string into a function which checks a given node’s type\n// for said string.\nfunction typeFactory(test) {\n  return type\n\n  function type(node) {\n    return Boolean(node && node.type === test)\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","'use strict';\n\nvar visit = require('unist-util-visit');\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar hastCssPropertyMap = {\n  align: 'text-align',\n  valign: 'vertical-align',\n  height: 'height',\n  width: 'width'\n};\n\nmodule.exports = function tableCellStyle(node) {\n  visit(node, 'element', visitor);\n  return node;\n};\n\nfunction visitor(node) {\n  if (node.tagName !== 'tr' && node.tagName !== 'td' && node.tagName !== 'th') {\n    return;\n  }\n\n  var hastName;\n  var cssName;\n  for (hastName in hastCssPropertyMap) {\n    if (\n      !hasOwnProperty.call(hastCssPropertyMap, hastName) ||\n      node.properties[hastName] === undefined\n    ) {\n      continue;\n    }\n    cssName = hastCssPropertyMap[hastName];\n    appendStyle(node, cssName, node.properties[hastName]);\n    delete node.properties[hastName];\n  }\n}\n\nfunction appendStyle(node, property, value) {\n  var prevStyle = (node.properties.style || '').trim();\n  if (prevStyle && !/;\\s*/.test(prevStyle)) {\n    prevStyle += ';';\n  }\n  if (prevStyle) {\n    prevStyle += ' ';\n  }\n  var nextStyle = prevStyle + property + ': ' + value + ';';\n  node.properties.style = nextStyle;\n}\n","'use strict'\n\nmodule.exports = visit\n\nvar visitParents = require('unist-util-visit-parents')\n\nvar CONTINUE = visitParents.CONTINUE\nvar SKIP = visitParents.SKIP\nvar EXIT = visitParents.EXIT\n\nvisit.CONTINUE = CONTINUE\nvisit.SKIP = SKIP\nvisit.EXIT = EXIT\n\nfunction visit(tree, test, visitor, reverse) {\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    visitor = test\n    test = null\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  function overload(node, parents) {\n    var parent = parents[parents.length - 1]\n    var index = parent ? parent.children.indexOf(node) : null\n    return visitor(node, index, parent)\n  }\n}\n","'use strict'\n\nmodule.exports = visitParents\n\nvar convert = require('unist-util-is/convert')\n\nvar CONTINUE = true\nvar SKIP = 'skip'\nvar EXIT = false\n\nvisitParents.CONTINUE = CONTINUE\nvisitParents.SKIP = SKIP\nvisitParents.EXIT = EXIT\n\nfunction visitParents(tree, test, visitor, reverse) {\n  var is\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    visitor = test\n    test = null\n  }\n\n  is = convert(test)\n\n  one(tree, null, [])\n\n  // Visit a single node.\n  function one(node, index, parents) {\n    var result = []\n    var subresult\n\n    if (!test || is(node, index, parents[parents.length - 1] || null)) {\n      result = toResult(visitor(node, parents))\n\n      if (result[0] === EXIT) {\n        return result\n      }\n    }\n\n    if (node.children && result[0] !== SKIP) {\n      subresult = toResult(all(node.children, parents.concat(node)))\n      return subresult[0] === EXIT ? subresult : result\n    }\n\n    return result\n  }\n\n  // Visit children in `parent`.\n  function all(children, parents) {\n    var min = -1\n    var step = reverse ? -1 : 1\n    var index = (reverse ? children.length : min) + step\n    var result\n\n    while (index > min && index < children.length) {\n      result = one(children[index], index, parents)\n\n      if (result[0] === EXIT) {\n        return result\n      }\n\n      index = typeof result[1] === 'number' ? result[1] : index + step\n    }\n  }\n}\n\nfunction toResult(value) {\n  if (value !== null && typeof value === 'object' && 'length' in value) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","'use strict'\n\nmodule.exports = convert\n\nfunction convert(test) {\n  if (typeof test === 'string') {\n    return typeFactory(test)\n  }\n\n  if (test === null || test === undefined) {\n    return ok\n  }\n\n  if (typeof test === 'object') {\n    return ('length' in test ? anyFactory : matchesFactory)(test)\n  }\n\n  if (typeof test === 'function') {\n    return test\n  }\n\n  throw new Error('Expected function, string, or object as test')\n}\n\nfunction convertAll(tests) {\n  var results = []\n  var length = tests.length\n  var index = -1\n\n  while (++index < length) {\n    results[index] = convert(tests[index])\n  }\n\n  return results\n}\n\n// Utility assert each property in `test` is represented in `node`, and each\n// values are strictly equal.\nfunction matchesFactory(test) {\n  return matches\n\n  function matches(node) {\n    var key\n\n    for (key in test) {\n      if (node[key] !== test[key]) {\n        return false\n      }\n    }\n\n    return true\n  }\n}\n\nfunction anyFactory(tests) {\n  var checks = convertAll(tests)\n  var length = checks.length\n\n  return matches\n\n  function matches() {\n    var index = -1\n\n    while (++index < length) {\n      if (checks[index].apply(this, arguments)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n// Utility to convert a string into a function which checks a given node’s type\n// for said string.\nfunction typeFactory(test) {\n  return type\n\n  function type(node) {\n    return Boolean(node && node.type === test)\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n"],"sourceRoot":""}